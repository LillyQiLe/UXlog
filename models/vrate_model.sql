-- MySQL Script generated by MySQL Workbench
-- 2018年02月17日 星期六 22时31分52秒
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema uxlog
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `uxlog` ;

-- -----------------------------------------------------
-- Schema uxlog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `uxlog` DEFAULT CHARACTER SET utf8 ;
USE `uxlog` ;

-- -----------------------------------------------------
-- Table `uxlog`.`t_user_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`t_user_info` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`t_user_info` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '用户编号（primary key）',
  `user_name` VARCHAR(45) NOT NULL COMMENT '昵称',
  `password` VARCHAR(65) NOT NULL,
  `blog_num` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '博客数量',
  `fans_count` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '粉丝数量',
  `follow_count` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '关注数量',
  `user_sex` TINYINT UNSIGNED NULL DEFAULT 3 COMMENT '0,女；1，男；2，跨性别；3、未知',
  `user_email` VARCHAR(45) NOT NULL,
  `reg_time` INT UNSIGNED NOT NULL,
  `pic_url` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  INDEX `reg_time_idx` (`reg_time` ASC),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uxlog`.`t_user_relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`t_user_relation` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`t_user_relation` (
  `user_relation_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL COMMENT '用户主键（联合主键）',
  `followed_id` INT UNSIGNED NOT NULL COMMENT '被关注者编号（联合主键）',
  `type` TINYINT UNSIGNED NULL COMMENT '关系（0，粉丝；1，关注）',
  INDEX `follow_id_fk_idx` (`followed_id` ASC),
  PRIMARY KEY (`user_relation_id`),
  CONSTRAINT `user_relation_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `uxlog`.`t_user_info` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_relation_follow_id_fk`
    FOREIGN KEY (`followed_id`)
    REFERENCES `uxlog`.`t_user_info` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uxlog`.`t_blog_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`t_blog_info` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`t_blog_info` (
  `blog_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '博客编号（主键）',
  `f_user_id` INT UNSIGNED NOT NULL COMMENT '博客用户编号',
  `content` TEXT NOT NULL COMMENT '博客内容',
  `type` TINYINT UNSIGNED NOT NULL COMMENT '博客类型（0、原创；1、转发）',
  `time` INT UNSIGNED NOT NULL COMMENT '发布时间',
  PRIMARY KEY (`blog_id`),
  INDEX `user_id_idx` (`f_user_id` ASC),
  INDEX `time_idx` (`time` ASC),
  CONSTRAINT `blog_user_id_fk`
    FOREIGN KEY (`f_user_id`)
    REFERENCES `uxlog`.`t_user_info` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uxlog`.`t_comment_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`t_comment_info` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`t_comment_info` (
  `comment_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '评论编号（主键）',
  `user_id` INT UNSIGNED NOT NULL,
  `blog_id` INT UNSIGNED NOT NULL,
  `comment_content` TEXT NOT NULL COMMENT '评论内容',
  `time` INT UNSIGNED NOT NULL COMMENT '评论发布时间',
  PRIMARY KEY (`comment_id`),
  INDEX `blog_id_fk_idx` (`blog_id` ASC),
  INDEX `user_id_fk_idx` (`user_id` ASC),
  INDEX `blog_id_idx` (`blog_id` ASC),
  INDEX `time_idx` (`time` ASC),
  CONSTRAINT `comment_blog_id_fk`
    FOREIGN KEY (`blog_id`)
    REFERENCES `uxlog`.`t_blog_info` (`blog_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `comment_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `uxlog`.`t_user_info` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uxlog`.`t_reply_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`t_reply_info` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`t_reply_info` (
  `reply_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '回复id（主键）',
  `comment_id` INT UNSIGNED NOT NULL COMMENT '评论id',
  `reply_from_user_id` INT UNSIGNED NOT NULL,
  `reply_type` TINYINT UNSIGNED NOT NULL COMMENT '回复类型（0、针对评论的回复；1、针对回复的回复）',
  `reply_content` TEXT NOT NULL,
  `time` INT UNSIGNED NOT NULL COMMENT '回复时间',
  PRIMARY KEY (`reply_id`),
  INDEX `comment_id_fk_idx` (`comment_id` ASC),
  INDEX `reply_from_user_if_fk_idx` (`reply_from_user_id` ASC),
  INDEX `time_idx` (`time` ASC),
  CONSTRAINT `comment_id_fk`
    FOREIGN KEY (`comment_id`)
    REFERENCES `uxlog`.`t_comment_info` (`comment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `reply_from_user_if_fk`
    FOREIGN KEY (`reply_from_user_id`)
    REFERENCES `uxlog`.`t_user_info` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `uxlog`.`reply_reply_relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `uxlog`.`reply_reply_relation` ;

CREATE TABLE IF NOT EXISTS `uxlog`.`reply_reply_relation` (
  `eply_reply_relation_id` INT NOT NULL AUTO_INCREMENT,
  `main_reply_id` INT UNSIGNED NOT NULL,
  `follow_reply` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`eply_reply_relation_id`),
  INDEX `fk_reply_reply_relation_1_idx` (`main_reply_id` ASC),
  INDEX `fk_reply_reply_relation_2_idx` (`follow_reply` ASC),
  CONSTRAINT `fk_reply_reply_relation_1`
    FOREIGN KEY (`main_reply_id`)
    REFERENCES `uxlog`.`t_reply_info` (`reply_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reply_reply_relation_2`
    FOREIGN KEY (`follow_reply`)
    REFERENCES `uxlog`.`t_reply_info` (`reply_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
